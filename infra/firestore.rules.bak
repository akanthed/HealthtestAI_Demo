rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users: allow users to read their own profile and update non-role fields.
    // Role modifications must be done by Admins via server (custom claims).
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId
                    && request.resource.data.role == resource.data.role; // prevent role changes by user
      // only admins can delete user records
      allow delete: if request.auth != null && request.auth.token.role == 'admin';
    }
    match /complianceStandards/{standardId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.role in ['admin','compliance_manager'];
    }
    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      // QA and Admin can create/update requirements
      allow create, update: if request.auth != null && request.auth.token.role in ['qa','admin'];
      allow delete: if request.auth != null && request.auth.token.role == 'admin';
    }
    match /testCases/{testCaseId} {
      allow read: if request.auth != null;
      // Create/update: SME and Admin can fully manage test cases. QA can create and edit but cannot set status 'approved'.
      allow create: if request.auth != null && request.auth.token.role in ['qa','sme','admin'];
      allow update: if request.auth != null && (
        // SME and Admin may do any update
        request.auth.token.role in ['sme','admin']
        // QA can update but must not set `status` to 'approved' or change role-related fields
        || (request.auth.token.role == 'qa' && request.resource.data.status != 'approved')
      );
      // delete: admin and sme can delete any test case. QA can delete only when the existing status is 'generated'.
      allow delete: if request.auth != null && (
        request.auth.token.role in ['sme','admin']
        || (request.auth.token.role == 'qa' && resource.data.status == 'generated')
      );
    }
    match /deid_mappings/{docId} {
      allow read: if request.auth != null && request.auth.token.role in ['admin','compliance_manager'];
      allow write: if false; // only server functions should write
    }
    match /auditLogs/{logId} {
      allow read: if request.auth != null && request.auth.token.role == 'admin';
      allow write: if false;
    }
  }
}